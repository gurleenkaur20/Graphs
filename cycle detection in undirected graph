/******************************************************************************

                              Online C++ Compiler.
               Code, Compile, Run and Debug C++ program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <iostream>
#include <bits/stdc++.h>
using namespace std;

class graph
{
    int V;
    list<int> *l;
    
    public:
    
    graph(int v)
    {
        V=v;
        l= new list<int> [V];
    }
    
    void add(int node1, int node2, bool directed= true)
    {
        l[node1].push_back(node2);
        if(directed)
        l[node2].push_back(node1);
    }
    
    /* void dfshelper(int node, bool visited[])
    {
        visited[node]=true;
        cout<<node<<",";
        //make a dfs call on its unvisited neighbours
        
        for(auto neighbours: l[node])
        {
            if(!visited [neighbours])
            dfshelper(neighbours, visited);
        }
    }
    
    void dfs(int source)
    {
        bool *visited = new bool[V]{0}; //array visited with v element initiated with 0
        dfshelper(source,visited);
    }
    */
    
    bool dfs(int node, vector <bool> &visited, int parent)
    {
        visited[node]=true; //mark that node as visited
        
        for(auto neighbours: l[node])
        {
            if(!visited[neighbours])
            {
                bool nbrHasCycle= dfs(neighbours, visited, node);
                if(nbrHasCycle)
                return true;
            }
            else if(neighbours!=parent)
            return true;
        }
    return false;
    }
    
    bool checkCycle(){
        vector<bool> visited (V,false);
        return dfs(0,visited,-1);
    }
};


int main()
{
    graph g(7);
    g.add(1,2);
    g.add(2,3);
    g.add(3,4);
    g.add(4,5);
    g.add(3,5);
    g.add(5,6);
    g.add(1,0);
    g.add(4,0);
    //g.dfs(1);
    cout<<"\n check cycle in the graph \n 0. no cycle 1. has cycle \n answer :"<<g.checkCycle();
}
